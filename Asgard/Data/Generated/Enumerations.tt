<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ include file="BifrostReference.t4" once="true" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Globalization" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="CBUS.Bifrost" #>
<#@ output extension=".cs" #>
<#	var name = "cbus-4.0-Rev-8d-Guide-6b-opcodes";
#>
using System;

/*	This file is automatically generated by a T4 template from a data file.
	<#= name #>
	It was last generated at <#= DateTime.Now #>.
	Any changes made manually will be lost when the file is regenerated.
*/
<#	var loader = new Loader(name);
	loader.LoadResource();

	var builder = new Builder(loader);
	builder.Build();
#>

namespace Asgard.Data
{
	#region Licence

/*
<#= builder.LicenceBlock.Text #>
 *	*/
	#endregion

	#region History

/*	Date		Author
<#= builder.HistoryBlock.Text #>
 *	*/

	#endregion

<#	if (!string.IsNullOrEmpty(builder.FileCommentBlock?.Text))
	{
#>
/*
<#= builder.FileCommentBlock.Text #>
 *	*/

<#	}
#>
	#region OpCodeGroup

	public enum OpCodeGroup
	{
		Unknown = 0,
		Accessory,
		Config,
		DCC,
		General,
        Extended,
	}

	#endregion
<#	foreach (var enumerationName in loader.EnumerationNames)
	{
#>

	#region <#= enumerationName #>

<#		var enumerations =
			loader.EnumerationLines
				.Where(n => n.EnumName == enumerationName)
				.ToList();
		var isFlags =
			enumerations
				.Any(n => n.IsFlags);
		if (isFlags)
		{
#>
	[Flags]
<#		}
		
#>
	public enum <#= enumerationName #>
	{
<#		foreach (var enumeration in enumerations)
		{
#>
		<#= enumeration.ItemName #> = <#= isFlags ? Math.Pow(2, enumeration.Value) : enumeration.Value #>,
<#		}
#>
	}

	#endregion
<#	}
#>
}
